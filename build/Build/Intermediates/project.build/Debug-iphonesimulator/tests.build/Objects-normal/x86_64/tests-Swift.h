// Generated by Swift version 1.1 (swift-600.0.56.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import XCTest;
@import ObjectiveC;
@import CoreData;
@import Realm;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSInvocation;

SWIFT_CLASS("_TtC5tests30CDArraySugarRecordResultsTests")
@interface CDArraySugarRecordResultsTests : XCTestCase
- (void)setUp;
- (void)testCount;
- (void)testObjectAtIndex;
- (void)testFirstObject;
- (void)testLastObject;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests35CoreDataFetchResultsControllerTests")
@interface CoreDataFetchResultsControllerTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testIfFetchedResultsControllerIsCalledWithNoCache;
- (void)testIfFetchedResultsControllerHasTheProperCache;
- (void)testIfTheFetchRequestPropertiesAreTheExpected;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDecimalNumber;
@class NSDate;
@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS("CoreDataObject")
@interface CoreDataObject : NSManagedObject
@property (nonatomic) NSDecimalNumber * age;
@property (nonatomic) NSDate * birth;
@property (nonatomic, copy) NSString * city;
@property (nonatomic, copy) NSString * email;
@property (nonatomic, copy) NSString * name;
- (instancetype)initWithEntity:(NSEntityDescription *)entity insertIntoManagedObjectContext:(NSManagedObjectContext *)context OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests19CoreDataObjectTests")
@interface CoreDataObjectTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testObjectCreation;
- (void)testObjectDeletion;
- (void)testAllObjectsDeletion;
- (void)testObjectsEdition;
- (void)testObjectQuerying;
- (void)testObjectsCount;
- (void)testObjectsWritingCancellation;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests19DefaultCDStackTests")
@interface DefaultCDStackTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testThatTheRootSavingContextIsSavedInApplicationWillTerminate;
- (void)testThatTheRootSavingContextIsSavedInApplicationWillResignActive;
- (void)testInitializeOfComponents;
- (void)testBackgroundContextShouldHaveTheRootSavingContextAsParent;
- (void)testMainContextShouldHaveTheRootSavingContextAsParent;
- (void)testRootSavingContextShouldHaveThePersistentStoreCoordinatorAsParent;
- (void)testBackgroundContextConcurrencyType;
- (void)testMainContextConcurrencyType;
- (void)testRootSavingContextConcurrencyType;
- (void)testIfTheAutoSavingClosureIsCalledDependingOnTheAutoSavingProperty;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests22DefaultREALMStackTests")
@interface DefaultREALMStackTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testThatPropertiesAreSetInInit;
- (void)testIfReturnsTheDefaultRLMContextForTheContext;
- (void)testIfReturnsTheDefaultRLMContextForTheContextInBAckground;
- (void)testIfInitializeTriesToMigrateIfNeeded;
- (void)testIfMigrationsAreProperlySorted;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSError;

@interface NSManagedObject (SWIFT_EXTENSION(tests))

/// Returns the class entity name
///
/// \returns String with the entity name
+ (NSString *)modelName;

/// Returns a the count of elements of this type
///
/// \returns Int
+ (NSInteger)count;

/// Creates a new object without inserting it in the context
///
/// \returns Created database object
+ (id)create;

/// Saves the object in the object context
///
/// \returns Bool indicating if the object has been properly saved
- (BOOL)save;

/// Saves the object in the object context asynchronously (or not) passing a completion closure
///
/// \param asynchronously Bool indicating if the saving process is asynchronous or not
///
/// \param completion Closure called when the saving operation has been completed
- (void)save:(BOOL)asynchronously completion:(void (^)(NSError *))completion;

/// Needed to be called when the object is going to be edited
///
/// \returns returns the current object
- (NSManagedObject *)beginWriting;

/// Needed to be called when the edition/deletion has finished
- (void)endWriting;

/// <ul><li><p>Asks the context for writing cancellation</p></li></ul>
- (void)cancelWriting;
@end

@class NSNotification;

@interface NSManagedObjectContext (SWIFT_EXTENSION(tests))

/// Add observer of self to check when is going to save to ensure items are saved with permanent IDs
- (void)addObserverToGetPermanentIDsBeforeSaving;

/// Adds an observer when the context's objects have changed
///
/// \param closure Closure to be executed then objects have changed
- (void)addObserverWhenObjectsChanged:(void (^)(void))closure;

/// Method executed before saving that convert temporary IDs into permanet ones
///
/// \param notification Notification that fired this method
- (void)contextWillSave:(NSNotification *)notification;

/// Add observer of other context
///
/// \param context NSManagedObjectContext to be observed
///
/// \param mainThread Bool indicating if it's the main thread
- (void)startObserving:(NSManagedObjectContext *)context inMainThread:(BOOL)mainThread;

/// Stop observing changes from other contexts
///
/// \param context NSManagedObjectContext that is going to stop observing to
- (void)stopObserving:(NSManagedObjectContext *)context;

/// Method to merge changes from other contexts (fired by KVO)
///
/// \param notification Notification that fired this method call
- (void)mergeChanges:(NSNotification *)notification;

/// Method to merge changes from other contexts (in the main thread)
///
/// \param notification Notification that fired this method call
- (void)mergeChangesInMainThread:(NSNotification *)notification;
@end


SWIFT_CLASS("_TtC5tests31NSManagedObjectSugarRecordTests")
@interface NSManagedObjectSugarRecordTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testIfTheSugarRecordCDMatchesTheObjectContext;
- (void)testIfReturnsTheEntityNameWithoutNamespace;
- (void)testIfTheFinderReturnsTheProperStackType;
- (void)testIfTheReturnedFinderIsRight;
- (void)testIfTheObjectClassAndStackTypeAreSetToTheFinderWhenFiltering;
- (void)testIfTheSortDescriptorsAreProperlySetToTheFinder;
- (void)testIfTheObjectClassAndStackTypeAreProperlySetWhenSorting;
- (void)testIfAllIsProperlySetToTheFinder;
- (void)testIfDeletePropagatesTheDeletionCallToTheContext;
- (void)testIfCreationPropagatesTheCallUsingOperations;
- (void)testIfSaveCallsSaveSynchronously;
- (void)testSave;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface RLMArray (SWIFT_EXTENSION(tests))
@end


@interface RLMObject (SWIFT_EXTENSION(tests))
@end


@interface RLMObject (SWIFT_EXTENSION(tests))

/// Returns the class entity name
///
/// \returns String with the entity name
+ (NSString *)modelName;

/// Returns the count of all existing element
///
/// \returns Int with the count
+ (NSInteger)count;

/// Creates a new object without inserting it in the context
///
/// \returns Created database object
+ (id)create;

/// Saves the object in the object context
///
/// \returns Bool indicating if the object has been properly saved
- (BOOL)save;

/// Saves the object in the context asynchronously (or not) passing a completion closure
///
/// \param asynchronously Bool indicating if the saving process is asynchronous or not
///
/// \param completion Closure called when the saving operation has been completed
- (void)save:(BOOL)asynchronously completion:(void (^)(NSError *))completion;

/// Needed to be called when the object is going to be edited
///
/// \returns returns the current object
- (RLMObject *)beginWriting;

/// Needed to be called when the edition has finished
- (void)endWriting;

/// <ul><li><p>Asks the context for writing cancellation</p></li></ul>
- (void)cancelWriting;
@end


SWIFT_CLASS("_TtC5tests25RLMObjectSugarRecordTests")
@interface RLMObjectSugarRecordTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testIfTheSugarRecordRealmMatchesTheObjectContext;
- (void)testIfReturnsTheEntityNameWithoutNamespace;
- (void)testIfTheFinderReturnsTheProperStackType;
- (void)testIfTheReturnedFinderIsRight;
- (void)testIfTheObjectClassAndStackTypeAreSetToTheFinderWhenFiltering;
- (void)testIfTheSortDescriptorsAreProperlySetToTheFinder;
- (void)testIfTheObjectClassAndStackTypeAreProperlySetWhenSorting;
- (void)testIfAllIsProperlySetToTheFinder;
- (void)testIfDeletePropagatesTheDeletionCallToTheContext;
- (void)testIfCreationPropagatesTheCallUsingOperations;
- (void)testIfSaveCallsSaveSynchronously;
- (void)testSave;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface RLMResults (SWIFT_EXTENSION(tests))
@end


@interface RLMResults (SWIFT_EXTENSION(tests))
@end


SWIFT_CLASS("_TtC5tests33RLMResultsSugarRecordResultsTests")
@interface RLMResultsSugarRecordResultsTests : XCTestCase
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests11RealmObject")
@interface RealmObject : RLMObject
@property (nonatomic, copy) NSString * name;
@property (nonatomic) NSInteger age;
@property (nonatomic, copy) NSString * email;
@property (nonatomic, copy) NSString * city;
@property (nonatomic) NSDate * birthday;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithObject:(id)object OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests16RealmObjectTests")
@interface RealmObjectTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testObjectCreation;
- (void)testObjectDeletion;
- (void)testAllObjectsDeletion;
- (void)testObjectsEdition;
- (void)testObjectQuerying;
- (void)testObjectsCount;
- (void)testObjectsWritingCancellation;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests19RestkitCDStackTests")
@interface RestkitCDStackTests : XCTestCase
- (void)testIfInitializeGetContextsFromRestkit;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests25SugarRecordCDContextTests")
@interface SugarRecordCDContextTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testThatEndWritingCallSavesTheContext;
- (void)testIfCancelWritingCancelChangesInTheCoreDataContext;
- (void)testThatCreateObjectsDoesItInTheProperContext;
- (void)testDeleteObjectsShouldCallDeleteObjectForEachObject;
- (void)testFetchRequestGenerationFromFinder;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests22SugarRecordLoggerTests")
@interface SugarRecordLoggerTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testFatalLogLevel;
- (void)testErrorLogLevel;
- (void)testWarnLogLevel;
- (void)testInfoLogLevel;
- (void)testVerboseLogLevel;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests26SugarRecordRLMContextTests")
@interface SugarRecordRLMContextTests : XCTestCase
- (void)testThatBegingWritingCallsBeginWriteTransationInRealmContext;
- (void)testThatEndWritingCallsCommitWriteTransationInRealmContext;
- (void)testThatCancelWritingCallsCancelWriteTransactionInRealmContext;
- (void)testObjectCreation;
- (void)testInsertObjectShouldInsertTheObjectInRealm;
- (void)testDeleteObjectsShouldCallDeleteObjectForEachObject;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests23SugarRecordResultsTests")
@interface SugarRecordResultsTests : XCTestCase
- (void)beforeEach;
- (void)afterEach;
- (void)setUp;
- (void)tearDown;
- (void)testCount;
- (void)testFirstObject;
- (void)testLastObject;
- (void)testObjectAtIndex;
- (void)testSubscript;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests33SugarRecordSugarRecordFinderTests")
@interface SugarRecordSugarRecordFinderTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testIfSortDescriptorsAreAddedToTheArrayUnsingSortDescriptor;
- (void)testIfSortDescriptorsAreAddedToTheArrayUnsingKeyAndAscending;
- (void)testIfPredicatesAreAddedPassingThePredicate;
- (void)testIfPredicatesAreAddedPassingThePredicateString;
- (void)testIfAllElementsIsAdded;
- (void)testIfFirstElementsIsAdded;
- (void)testIfLastElementsIsAdded;
- (void)testIfLastsElementsIsAdded;
- (void)testsIfFirstsElementsIsAdded;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests16SugarRecordTests")
@interface SugarRecordTests : XCTestCase
- (void)setUp;
- (void)tearDown;
- (void)testIfAddsTheStacksProperly;
- (void)testIfStacksAreRemovedProperly;
- (void)testIfReturnsTheProperStackForCoreDataType;
- (void)testThatApplicationWillResignActiveIsCalledInStacks;
- (void)testThatApplicationWillTerminateIsCalledInStacks;
- (void)testThatApplicationWillEnterForegroundIsCalledInStacks;
- (void)testThatRemoveDatabaseIsCalledInStacks;
- (void)testThatStacksAreCleanedAfterDatabaseRemoval;
- (void)testIfOperationIsExecutedInMainThread;
- (void)testThatTheClosureIsCalledPassingTheRightContextInMainThread;
- (void)testThatTheClosureIsCalledPassingTheRightContextInBackgroundThread;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5tests18iCloudCDStackTests")
@interface iCloudCDStackTests : XCTestCase
- (void)testStackComponentsAreInitialized;
- (void)testThatContextsAreCreatedOnceDatabaseIsAdded;
- (void)testIfTheRootSavingContextHasTheProperPersistentStoreCoordinator;
- (void)testStoreOptions;
- (void)testIfObserversAreAddedToDetectiCloudChanges;
- (void)testStoresWillChange;
- (void)testIfChangesAreBroughtIfUbiquituousChanges;
- (instancetype)initWithInvocation:(NSInvocation *)invocation OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithSelector:(SEL)selector OBJC_DESIGNATED_INITIALIZER;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
